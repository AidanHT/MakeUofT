{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:5000/api';\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add token to requests if it exists\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  console.error('Request interceptor error:', error);\n  return Promise.reject(error);\n});\n\n// Add response interceptor for better error handling\napi.interceptors.response.use(response => response, error => {\n  console.error('API Error:', error);\n  if (error.response) {\n    // The request was made and the server responded with a status code\n    // that falls out of the range of 2xx\n    console.error('Response data:', error.response.data);\n    console.error('Response status:', error.response.status);\n    throw error.response.data.error || 'An error occurred';\n  } else if (error.request) {\n    // The request was made but no response was received\n    console.error('No response received:', error.request);\n    throw 'Unable to connect to the server. Please try again later.';\n  } else {\n    // Something happened in setting up the request that triggered an Error\n    console.error('Request setup error:', error.message);\n    throw error.message;\n  }\n});\nexport const login = async (email, password) => {\n  try {\n    console.log('Attempting login with:', {\n      email\n    });\n    const response = await api.post('/auth/login', {\n      email,\n      password\n    });\n    console.log('Login response:', response.data);\n    localStorage.setItem('token', response.data.token);\n    return response.data;\n  } catch (error) {\n    console.error('Login error:', error);\n    throw error;\n  }\n};\nexport const signup = async userData => {\n  try {\n    console.log('Attempting signup with:', {\n      ...userData,\n      password: '[REDACTED]'\n    });\n    const response = await api.post('/auth/signup', userData);\n    console.log('Signup successful:', {\n      userId: response.data.user.id\n    });\n    localStorage.setItem('token', response.data.token);\n    return response.data;\n  } catch (error) {\n    var _error$response, _error$response$data, _error$response2;\n    console.error('Signup error:', error);\n    if ((_error$response = error.response) !== null && _error$response !== void 0 && (_error$response$data = _error$response.data) !== null && _error$response$data !== void 0 && _error$response$data.error) {\n      throw new Error(error.response.data.error);\n    } else if (((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) === 500) {\n      throw new Error('Server error. Please try again later.');\n    } else if (!error.response) {\n      throw new Error('Network error. Please check your connection.');\n    }\n    throw new Error('An unexpected error occurred during registration.');\n  }\n};\nexport const submitQuestionnaire = async profileData => {\n  try {\n    console.log('Submitting questionnaire data:', profileData);\n    const response = await api.post('/user/preferences', profileData);\n    console.log('Questionnaire response:', response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Questionnaire submission error:', error);\n    throw error;\n  }\n};\nexport const getUserProfile = async () => {\n  try {\n    const response = await api.get('/user/profile');\n    return response.data;\n  } catch (error) {\n    var _error$response3, _error$response3$data;\n    throw ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.error) || 'An error occurred';\n  }\n};\nexport const logout = () => {\n  localStorage.removeItem('token');\n};\nexport default api;","map":{"version":3,"names":["axios","API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","console","Promise","reject","response","data","status","message","login","email","password","log","post","setItem","signup","userData","userId","user","id","_error$response","_error$response$data","_error$response2","Error","submitQuestionnaire","profileData","getUserProfile","get","_error$response3","_error$response3$data","logout","removeItem"],"sources":["C:/Users/Quant/Documents/Programming/Projects/Hackathon/MakeUofT/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:5000/api';\r\n\r\nconst api = axios.create({\r\n    baseURL: API_URL,\r\n    headers: {\r\n        'Content-Type': 'application/json'\r\n    }\r\n});\r\n\r\n// Add token to requests if it exists\r\napi.interceptors.request.use((config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n        config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n}, (error) => {\r\n    console.error('Request interceptor error:', error);\r\n    return Promise.reject(error);\r\n});\r\n\r\n// Add response interceptor for better error handling\r\napi.interceptors.response.use(\r\n    (response) => response,\r\n    (error) => {\r\n        console.error('API Error:', error);\r\n        if (error.response) {\r\n            // The request was made and the server responded with a status code\r\n            // that falls out of the range of 2xx\r\n            console.error('Response data:', error.response.data);\r\n            console.error('Response status:', error.response.status);\r\n            throw error.response.data.error || 'An error occurred';\r\n        } else if (error.request) {\r\n            // The request was made but no response was received\r\n            console.error('No response received:', error.request);\r\n            throw 'Unable to connect to the server. Please try again later.';\r\n        } else {\r\n            // Something happened in setting up the request that triggered an Error\r\n            console.error('Request setup error:', error.message);\r\n            throw error.message;\r\n        }\r\n    }\r\n);\r\n\r\nexport const login = async (email, password) => {\r\n    try {\r\n        console.log('Attempting login with:', { email });\r\n        const response = await api.post('/auth/login', { email, password });\r\n        console.log('Login response:', response.data);\r\n        localStorage.setItem('token', response.data.token);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Login error:', error);\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const signup = async (userData) => {\r\n    try {\r\n        console.log('Attempting signup with:', { ...userData, password: '[REDACTED]' });\r\n        const response = await api.post('/auth/signup', userData);\r\n        console.log('Signup successful:', { userId: response.data.user.id });\r\n        localStorage.setItem('token', response.data.token);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Signup error:', error);\r\n        if (error.response?.data?.error) {\r\n            throw new Error(error.response.data.error);\r\n        } else if (error.response?.status === 500) {\r\n            throw new Error('Server error. Please try again later.');\r\n        } else if (!error.response) {\r\n            throw new Error('Network error. Please check your connection.');\r\n        }\r\n        throw new Error('An unexpected error occurred during registration.');\r\n    }\r\n};\r\n\r\nexport const submitQuestionnaire = async (profileData) => {\r\n    try {\r\n        console.log('Submitting questionnaire data:', profileData);\r\n        const response = await api.post('/user/preferences', profileData);\r\n        console.log('Questionnaire response:', response.data);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Questionnaire submission error:', error);\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const getUserProfile = async () => {\r\n    try {\r\n        const response = await api.get('/user/profile');\r\n        return response.data;\r\n    } catch (error) {\r\n        throw error.response?.data?.error || 'An error occurred';\r\n    }\r\n};\r\n\r\nexport const logout = () => {\r\n    localStorage.removeItem('token');\r\n};\r\n\r\nexport default api; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}