{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:5000/api';\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add token to requests if it exists\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Add response interceptor to handle errors\napi.interceptors.response.use(response => response, error => {\n  if (error.code === 'ERR_NETWORK') {\n    throw new Error('Network Error: Unable to connect to the server');\n  }\n  if (error.response) {\n    throw error.response.data.error || 'An error occurred';\n  }\n  throw error;\n});\nexport const login = async (email, password) => {\n  try {\n    const response = await api.post('/auth/login', {\n      email,\n      password\n    });\n    if (response.data.token) {\n      localStorage.setItem('token', response.data.token);\n    }\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const signup = async userData => {\n  try {\n    const response = await api.post('/auth/signup', userData);\n    if (response.data.token) {\n      localStorage.setItem('token', response.data.token);\n    }\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const submitQuestionnaire = async profileData => {\n  try {\n    const response = await api.post('/profile/questionnaire', {\n      age: profileData.age,\n      weight: profileData.weight,\n      height: profileData.height,\n      experience: profileData.experience,\n      poseCount: profileData.poseCount,\n      practiceDuration: profileData.practiceDuration,\n      practiceFrequency: profileData.practiceFrequency,\n      focusAreas: profileData.focusAreas\n    });\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const getUserProfile = async () => {\n  try {\n    const response = await api.get('/user/profile');\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const logout = () => {\n  localStorage.removeItem('token');\n};\nexport default api;","map":{"version":3,"names":["axios","API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","response","error","code","Error","data","login","email","password","post","setItem","signup","userData","submitQuestionnaire","profileData","age","weight","height","experience","poseCount","practiceDuration","practiceFrequency","focusAreas","getUserProfile","get","logout","removeItem"],"sources":["C:/Users/Quant/Documents/Programming/Projects/Hackathon/MakeUofT/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:5000/api';\r\n\r\nconst api = axios.create({\r\n    baseURL: API_URL,\r\n    headers: {\r\n        'Content-Type': 'application/json'\r\n    }\r\n});\r\n\r\n// Add token to requests if it exists\r\napi.interceptors.request.use((config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n        config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n});\r\n\r\n// Add response interceptor to handle errors\r\napi.interceptors.response.use(\r\n    (response) => response,\r\n    (error) => {\r\n        if (error.code === 'ERR_NETWORK') {\r\n            throw new Error('Network Error: Unable to connect to the server');\r\n        }\r\n        if (error.response) {\r\n            throw error.response.data.error || 'An error occurred';\r\n        }\r\n        throw error;\r\n    }\r\n);\r\n\r\nexport const login = async (email, password) => {\r\n    try {\r\n        const response = await api.post('/auth/login', { email, password });\r\n        if (response.data.token) {\r\n            localStorage.setItem('token', response.data.token);\r\n        }\r\n        return response.data;\r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const signup = async (userData) => {\r\n    try {\r\n        const response = await api.post('/auth/signup', userData);\r\n        if (response.data.token) {\r\n            localStorage.setItem('token', response.data.token);\r\n        }\r\n        return response.data;\r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const submitQuestionnaire = async (profileData) => {\r\n    try {\r\n        const response = await api.post('/profile/questionnaire', {\r\n            age: profileData.age,\r\n            weight: profileData.weight,\r\n            height: profileData.height,\r\n            experience: profileData.experience,\r\n            poseCount: profileData.poseCount,\r\n            practiceDuration: profileData.practiceDuration,\r\n            practiceFrequency: profileData.practiceFrequency,\r\n            focusAreas: profileData.focusAreas\r\n        });\r\n        return response.data;\r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const getUserProfile = async () => {\r\n    try {\r\n        const response = await api.get('/user/profile');\r\n        return response.data;\r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const logout = () => {\r\n    localStorage.removeItem('token');\r\n};\r\n\r\nexport default api; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,2BAA2B;AAE3C,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACrBC,OAAO,EAAEH,OAAO;EAChBI,OAAO,EAAE;IACL,cAAc,EAAE;EACpB;AACJ,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACrC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACPD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EACpD;EACA,OAAOD,MAAM;AACjB,CAAC,CAAC;;AAEF;AACAP,GAAG,CAACI,YAAY,CAACQ,QAAQ,CAACN,GAAG,CACxBM,QAAQ,IAAKA,QAAQ,EACrBC,KAAK,IAAK;EACP,IAAIA,KAAK,CAACC,IAAI,KAAK,aAAa,EAAE;IAC9B,MAAM,IAAIC,KAAK,CAAC,gDAAgD,CAAC;EACrE;EACA,IAAIF,KAAK,CAACD,QAAQ,EAAE;IAChB,MAAMC,KAAK,CAACD,QAAQ,CAACI,IAAI,CAACH,KAAK,IAAI,mBAAmB;EAC1D;EACA,MAAMA,KAAK;AACf,CACJ,CAAC;AAED,OAAO,MAAMI,KAAK,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;EAC5C,IAAI;IACA,MAAMP,QAAQ,GAAG,MAAMZ,GAAG,CAACoB,IAAI,CAAC,aAAa,EAAE;MAAEF,KAAK;MAAEC;IAAS,CAAC,CAAC;IACnE,IAAIP,QAAQ,CAACI,IAAI,CAACR,KAAK,EAAE;MACrBC,YAAY,CAACY,OAAO,CAAC,OAAO,EAAET,QAAQ,CAACI,IAAI,CAACR,KAAK,CAAC;IACtD;IACA,OAAOI,QAAQ,CAACI,IAAI;EACxB,CAAC,CAAC,OAAOH,KAAK,EAAE;IACZ,MAAMA,KAAK;EACf;AACJ,CAAC;AAED,OAAO,MAAMS,MAAM,GAAG,MAAOC,QAAQ,IAAK;EACtC,IAAI;IACA,MAAMX,QAAQ,GAAG,MAAMZ,GAAG,CAACoB,IAAI,CAAC,cAAc,EAAEG,QAAQ,CAAC;IACzD,IAAIX,QAAQ,CAACI,IAAI,CAACR,KAAK,EAAE;MACrBC,YAAY,CAACY,OAAO,CAAC,OAAO,EAAET,QAAQ,CAACI,IAAI,CAACR,KAAK,CAAC;IACtD;IACA,OAAOI,QAAQ,CAACI,IAAI;EACxB,CAAC,CAAC,OAAOH,KAAK,EAAE;IACZ,MAAMA,KAAK;EACf;AACJ,CAAC;AAED,OAAO,MAAMW,mBAAmB,GAAG,MAAOC,WAAW,IAAK;EACtD,IAAI;IACA,MAAMb,QAAQ,GAAG,MAAMZ,GAAG,CAACoB,IAAI,CAAC,wBAAwB,EAAE;MACtDM,GAAG,EAAED,WAAW,CAACC,GAAG;MACpBC,MAAM,EAAEF,WAAW,CAACE,MAAM;MAC1BC,MAAM,EAAEH,WAAW,CAACG,MAAM;MAC1BC,UAAU,EAAEJ,WAAW,CAACI,UAAU;MAClCC,SAAS,EAAEL,WAAW,CAACK,SAAS;MAChCC,gBAAgB,EAAEN,WAAW,CAACM,gBAAgB;MAC9CC,iBAAiB,EAAEP,WAAW,CAACO,iBAAiB;MAChDC,UAAU,EAAER,WAAW,CAACQ;IAC5B,CAAC,CAAC;IACF,OAAOrB,QAAQ,CAACI,IAAI;EACxB,CAAC,CAAC,OAAOH,KAAK,EAAE;IACZ,MAAMA,KAAK;EACf;AACJ,CAAC;AAED,OAAO,MAAMqB,cAAc,GAAG,MAAAA,CAAA,KAAY;EACtC,IAAI;IACA,MAAMtB,QAAQ,GAAG,MAAMZ,GAAG,CAACmC,GAAG,CAAC,eAAe,CAAC;IAC/C,OAAOvB,QAAQ,CAACI,IAAI;EACxB,CAAC,CAAC,OAAOH,KAAK,EAAE;IACZ,MAAMA,KAAK;EACf;AACJ,CAAC;AAED,OAAO,MAAMuB,MAAM,GAAGA,CAAA,KAAM;EACxB3B,YAAY,CAAC4B,UAAU,CAAC,OAAO,CAAC;AACpC,CAAC;AAED,eAAerC,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}