{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Quant\\\\Documents\\\\Programming\\\\Projects\\\\Hackathon\\\\MakeUofT\\\\frontend\\\\src\\\\components\\\\PoseTracker.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState, useCallback, useMemo } from 'react';\nimport Webcam from 'react-webcam';\nimport { Camera } from '@mediapipe/camera_utils';\nimport { Pose } from '@mediapipe/pose';\nimport './PoseTracker.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PoseTracker = ({\n  userPreferences\n}) => {\n  _s();\n  var _selectedPose$name;\n  const webcamRef = useRef(null);\n  const canvasRef = useRef(null);\n  const poseRef = useRef(null);\n  const cameraRef = useRef(null);\n  const cleanupInProgressRef = useRef(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [poseAccuracy, setPoseAccuracy] = useState(0);\n  const [segmentAccuracies, setSegmentAccuracies] = useState({});\n  const [poseFeedback, setPoseFeedback] = useState('');\n  const [wsConnection, setWsConnection] = useState(null);\n  const [selectedPose, setSelectedPose] = useState(null);\n\n  // New state variables for pose cycling\n  const [availablePoses, setAvailablePoses] = useState([]);\n  const [currentPoseIndex, setCurrentPoseIndex] = useState(0);\n  const [timeRemaining, setTimeRemaining] = useState(15);\n  const [isSessionComplete, setIsSessionComplete] = useState(false);\n  const [totalPosesCompleted, setTotalPosesCompleted] = useState(0);\n\n  // Add new state variables for session control\n  const [isSessionStarted, setIsSessionStarted] = useState(false);\n  const [isPaused, setIsPaused] = useState(false);\n  const [isInitialized, setIsInitialized] = useState(false);\n\n  // Constants\n  const POSE_DURATION = 15; // seconds\n  const poseNames = ['crescent-lunge', 'dancers-pose', 'high-plank-pose', 'mountain-pose', 'seated-forward-fold', 'tree-pose', 'triangle-pose', 'upward-facing-dog'];\n\n  // Throttle pose detection frames\n  const lastProcessedTime = useRef(0);\n  const FRAME_RATE = 30; // Process 30 frames per second\n  const FRAME_INTERVAL = 1000 / FRAME_RATE;\n\n  // Memoize video constraints\n  const videoConstraints = useMemo(() => ({\n    width: 640,\n    height: 480,\n    facingMode: 'user'\n  }), []);\n\n  // Memoize segment definitions\n  const bodySegments = useMemo(() => ({\n    head: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10],\n    upperBody: [11, 12, 13, 14, 15, 16],\n    torso: [11, 12, 23, 24],\n    lowerBody: [23, 24, 25, 26, 27, 28]\n  }), []);\n  const requiredPoints = useMemo(() => ({\n    head: [0, 1, 4],\n    upperBody: [11, 12],\n    torso: [11, 12, 23, 24],\n    lowerBody: [23, 24, 25, 26]\n  }), []);\n  const segmentWeights = useMemo(() => ({\n    head: 1,\n    upperBody: 1.2,\n    torso: 1.2,\n    lowerBody: 1\n  }), []);\n\n  // Memoize normalization function\n  const normalizePose = useCallback(landmarks => {\n    const leftShoulder = landmarks[11];\n    const rightShoulder = landmarks[12];\n    const shoulderCenterX = (leftShoulder.x + rightShoulder.x) / 2;\n    const shoulderCenterY = (leftShoulder.y + rightShoulder.y) / 2;\n    const shoulderWidth = Math.sqrt(Math.pow(rightShoulder.x - leftShoulder.x, 2) + Math.pow(rightShoulder.y - leftShoulder.y, 2));\n    return landmarks.map(landmark => ({\n      x: (landmark.x - shoulderCenterX) / shoulderWidth,\n      y: (landmark.y - shoulderCenterY) / shoulderWidth,\n      visibility: landmark.visibility\n    }));\n  }, []);\n\n  // Optimize pose accuracy calculation\n  const calculatePoseAccuracy = useCallback((userLandmarks, targetPose) => {\n    if (!(targetPose !== null && targetPose !== void 0 && targetPose.landmarks) || !userLandmarks) return {\n      total: 0,\n      segments: {}\n    };\n    const normalizedUser = normalizePose(userLandmarks);\n    const normalizedTarget = normalizePose(targetPose.landmarks);\n    let segmentAccuracies = {};\n    let visibleSegments = 0;\n    for (const [segment, points] of Object.entries(bodySegments)) {\n      const requiredVisible = requiredPoints[segment].every(index => {\n        const userPoint = normalizedUser[index];\n        const targetPoint = normalizedTarget[index];\n        return userPoint.visibility > 0.5 && targetPoint.visibility > 0.5;\n      });\n      if (!requiredVisible) continue;\n      let segmentTotal = 0;\n      let segmentPoints = 0;\n      for (const index of points) {\n        const userLandmark = normalizedUser[index];\n        const targetLandmark = normalizedTarget[index];\n        if (userLandmark.visibility > 0.5 && targetLandmark.visibility > 0.5) {\n          const userAngle = Math.atan2(userLandmark.y, userLandmark.x);\n          const targetAngle = Math.atan2(targetLandmark.y, targetLandmark.x);\n          const angleDiff = Math.abs(userAngle - targetAngle);\n          const distance = Math.hypot(userLandmark.x - targetLandmark.x, userLandmark.y - targetLandmark.y);\n          const angleAccuracy = Math.max(0, 1 - angleDiff / Math.PI);\n          const distanceAccuracy = Math.max(0, 1 - distance / 0.5);\n          const pointAccuracy = angleAccuracy * 0.7 + distanceAccuracy * 0.3;\n          const weight = Math.min(userLandmark.visibility, targetLandmark.visibility);\n          segmentTotal += pointAccuracy * weight;\n          segmentPoints += weight;\n        }\n      }\n      if (segmentPoints > 0) {\n        const rawAccuracy = segmentTotal / segmentPoints * 100;\n        segmentAccuracies[segment] = {\n          accuracy: Math.min(100, Math.max(0, rawAccuracy)),\n          visibility: segmentPoints / points.length\n        };\n        visibleSegments++;\n      }\n    }\n    if (visibleSegments === 0) return {\n      total: 0,\n      segments: {}\n    };\n    let totalAccuracy = 0;\n    let totalWeight = 0;\n    for (const [segment, data] of Object.entries(segmentAccuracies)) {\n      const weight = segmentWeights[segment] * data.visibility;\n      totalAccuracy += data.accuracy * weight;\n      totalWeight += weight;\n    }\n    return {\n      total: Math.round(totalWeight > 0 ? totalAccuracy / totalWeight : 0),\n      segments: segmentAccuracies\n    };\n  }, [bodySegments, requiredPoints, segmentWeights, normalizePose]);\n\n  // Optimize onResults callback\n  const onResults = useCallback(results => {\n    var _webcamRef$current, _webcamRef$current$vi, _webcamRef$current2, _webcamRef$current2$v;\n    if (!canvasRef.current || !results.poseLandmarks) return;\n\n    // Only process pose detection if session is started and not paused\n    if (!isSessionStarted || isPaused) return;\n\n    // Throttle frame processing\n    const now = performance.now();\n    if (now - lastProcessedTime.current < FRAME_INTERVAL) return;\n    lastProcessedTime.current = now;\n    const canvasElement = canvasRef.current;\n    const canvasCtx = canvasElement.getContext('2d');\n    const videoWidth = ((_webcamRef$current = webcamRef.current) === null || _webcamRef$current === void 0 ? void 0 : (_webcamRef$current$vi = _webcamRef$current.video) === null || _webcamRef$current$vi === void 0 ? void 0 : _webcamRef$current$vi.videoWidth) || 640;\n    const videoHeight = ((_webcamRef$current2 = webcamRef.current) === null || _webcamRef$current2 === void 0 ? void 0 : (_webcamRef$current2$v = _webcamRef$current2.video) === null || _webcamRef$current2$v === void 0 ? void 0 : _webcamRef$current2$v.videoHeight) || 480;\n\n    // Set canvas dimensions to match video\n    if (canvasElement.width !== videoWidth) {\n      canvasElement.width = videoWidth;\n      canvasElement.height = videoHeight;\n    }\n\n    // Calculate pose accuracy if we have a selected pose and session is started\n    if (selectedPose !== null && selectedPose !== void 0 && selectedPose.landmarks && isSessionStarted && !isPaused) {\n      const accuracyData = calculatePoseAccuracy(results.poseLandmarks, selectedPose);\n      setPoseAccuracy(accuracyData.total);\n      setSegmentAccuracies(accuracyData.segments);\n    }\n\n    // Draw pose landmarks with optimized rendering\n    if (results.poseLandmarks) {\n      canvasCtx.save();\n      canvasCtx.clearRect(0, 0, videoWidth, videoHeight);\n      canvasCtx.scale(-1, 1);\n      canvasCtx.translate(-videoWidth, 0);\n\n      // Draw connectors\n      canvasCtx.lineWidth = 3;\n\n      // Draw pose connections\n      function drawConnection(landmarks, start, end, color) {\n        const startPoint = landmarks[start];\n        const endPoint = landmarks[end];\n        if (startPoint.visibility > 0.5 && endPoint.visibility > 0.5) {\n          canvasCtx.beginPath();\n          canvasCtx.moveTo(startPoint.x * videoWidth, startPoint.y * videoHeight);\n          canvasCtx.lineTo(endPoint.x * videoWidth, endPoint.y * videoHeight);\n          canvasCtx.strokeStyle = color;\n          canvasCtx.stroke();\n        }\n      }\n      const landmarks = results.poseLandmarks;\n\n      // Draw body parts with different colors\n      // Upper body (green)\n      const upperBodyColor = '#00FF00';\n      drawConnection(landmarks, 11, 12, upperBodyColor); // shoulders\n      drawConnection(landmarks, 11, 13, upperBodyColor); // left upper arm\n      drawConnection(landmarks, 13, 15, upperBodyColor); // left lower arm\n      drawConnection(landmarks, 12, 14, upperBodyColor); // right upper arm\n      drawConnection(landmarks, 14, 16, upperBodyColor); // right lower arm\n\n      // Head (red)\n      const headColor = '#FF0000';\n      drawConnection(landmarks, 0, 1, headColor);\n      drawConnection(landmarks, 1, 2, headColor);\n      drawConnection(landmarks, 2, 3, headColor);\n      drawConnection(landmarks, 3, 7, headColor);\n      drawConnection(landmarks, 0, 4, headColor);\n      drawConnection(landmarks, 4, 5, headColor);\n      drawConnection(landmarks, 5, 6, headColor);\n      drawConnection(landmarks, 6, 8, headColor);\n\n      // Torso (blue)\n      const torsoColor = '#0000FF';\n      drawConnection(landmarks, 11, 23, torsoColor); // left shoulder to hip\n      drawConnection(landmarks, 12, 24, torsoColor); // right shoulder to hip\n      drawConnection(landmarks, 23, 24, torsoColor); // hips\n\n      // Lower body (yellow)\n      const lowerBodyColor = '#FFFF00';\n      drawConnection(landmarks, 23, 25, lowerBodyColor); // left hip to knee\n      drawConnection(landmarks, 25, 27, lowerBodyColor); // left knee to ankle\n      drawConnection(landmarks, 24, 26, lowerBodyColor); // right hip to knee\n      drawConnection(landmarks, 26, 28, lowerBodyColor); // right knee to ankle\n\n      // Draw landmarks\n      landmarks.forEach((landmark, index) => {\n        if (landmark.visibility > 0.5) {\n          canvasCtx.beginPath();\n          canvasCtx.arc(landmark.x * videoWidth, landmark.y * videoHeight, 5, 0, 2 * Math.PI);\n          canvasCtx.fillStyle = '#FFFFFF';\n          canvasCtx.fill();\n          canvasCtx.strokeStyle = '#000000';\n          canvasCtx.stroke();\n        }\n      });\n      canvasCtx.restore();\n    }\n  }, [selectedPose, isPaused, calculatePoseAccuracy, isSessionStarted]);\n  useEffect(() => {\n    const loadPoses = async () => {\n      try {\n        setIsLoading(true);\n        setError(null);\n\n        // Default to 1 pose if no preferences\n        const count = (userPreferences === null || userPreferences === void 0 ? void 0 : userPreferences.poseCount) || 1;\n        console.log('Loading poses with count:', count);\n\n        // Load all poses up to the user's poseCount\n        const posesToLoad = poseNames.slice(0, count);\n        console.log('Poses to load:', posesToLoad);\n        const loadedPoses = await Promise.all(posesToLoad.map(async poseName => {\n          try {\n            const response = await fetch(`${process.env.PUBLIC_URL}/pose_results/${poseName}_pose.json`);\n            if (!response.ok) {\n              throw new Error(`Failed to load pose: ${poseName}`);\n            }\n            const poseData = await response.json();\n            return {\n              ...poseData,\n              name: poseName\n            };\n          } catch (err) {\n            console.error(`Error loading pose ${poseName}:`, err);\n            throw err;\n          }\n        }));\n        console.log('Loaded poses:', loadedPoses);\n        setAvailablePoses(loadedPoses);\n        if (loadedPoses.length > 0) {\n          setSelectedPose(loadedPoses[0]);\n        }\n        setIsLoading(false);\n      } catch (err) {\n        console.error('Error loading pose data:', err);\n        setError('Failed to load pose data. Please check your internet connection and try again.');\n        setIsLoading(false);\n      }\n    };\n    if (userPreferences) {\n      loadPoses();\n    }\n  }, [userPreferences]);\n  const cleanup = useCallback(() => {\n    if (cleanupInProgressRef.current) return;\n    cleanupInProgressRef.current = true;\n    try {\n      if (cameraRef.current) {\n        cameraRef.current.stop();\n        cameraRef.current = null;\n      }\n      if (poseRef.current) {\n        poseRef.current.close();\n        poseRef.current = null;\n      }\n    } catch (err) {\n      console.error('Error during cleanup:', err);\n    } finally {\n      cleanupInProgressRef.current = false;\n    }\n  }, []);\n\n  // Timer effect for pose cycling\n  useEffect(() => {\n    if (!availablePoses.length || isSessionComplete || !isSessionStarted || isPaused) return;\n    const timer = setInterval(() => {\n      setTimeRemaining(prev => {\n        if (prev <= 1) {\n          // Time to switch poses\n          setCurrentPoseIndex(currentIndex => {\n            const nextIndex = currentIndex + 1;\n            // Increment completed poses count for the pose that just finished\n            setTotalPosesCompleted(prev => prev + 1);\n            if (nextIndex >= availablePoses.length) {\n              setIsSessionComplete(true);\n              cleanup();\n              return currentIndex;\n            }\n            setSelectedPose(availablePoses[nextIndex]);\n            return nextIndex;\n          });\n          return POSE_DURATION;\n        }\n        return prev - 1;\n      });\n    }, 1000);\n    return () => clearInterval(timer);\n  }, [availablePoses, isSessionComplete, cleanup, isSessionStarted, isPaused]);\n\n  // Handler for starting the session\n  const handleStartSession = useCallback(() => {\n    setIsSessionStarted(true);\n    setIsPaused(false);\n    setTimeRemaining(POSE_DURATION);\n    setTotalPosesCompleted(0);\n  }, []);\n\n  // Handler for pausing/resuming the session\n  const handlePauseResume = useCallback(() => {\n    setIsPaused(prev => !prev);\n  }, []);\n\n  // Handler for resetting the session\n  const handleReset = useCallback(() => {\n    cleanup();\n    setIsSessionStarted(false);\n    setIsPaused(false);\n    setIsSessionComplete(false);\n    setCurrentPoseIndex(0);\n    setTimeRemaining(POSE_DURATION);\n    setTotalPosesCompleted(0);\n    if (availablePoses.length > 0) {\n      setSelectedPose(availablePoses[0]);\n    }\n  }, [cleanup, availablePoses]);\n\n  // Optimize MediaPipe initialization\n  useEffect(() => {\n    const initializePose = async () => {\n      try {\n        var _webcamRef$current3;\n        setIsLoading(true);\n        setError(null);\n        cleanup();\n        const pose = new Pose({\n          locateFile: file => `https://cdn.jsdelivr.net/npm/@mediapipe/pose/${file}`\n        });\n        pose.setOptions({\n          modelComplexity: 1,\n          smoothLandmarks: true,\n          enableSegmentation: false,\n          smoothSegmentation: false,\n          minDetectionConfidence: 0.5,\n          minTrackingConfidence: 0.5\n        });\n        await pose.initialize();\n        pose.onResults(onResults);\n        poseRef.current = pose;\n        if ((_webcamRef$current3 = webcamRef.current) !== null && _webcamRef$current3 !== void 0 && _webcamRef$current3.video) {\n          const camera = new Camera(webcamRef.current.video, {\n            onFrame: async () => {\n              var _webcamRef$current4;\n              if ((_webcamRef$current4 = webcamRef.current) !== null && _webcamRef$current4 !== void 0 && _webcamRef$current4.video && poseRef.current && !cleanupInProgressRef.current && !isPaused) {\n                try {\n                  await poseRef.current.send({\n                    image: webcamRef.current.video\n                  });\n                } catch (err) {\n                  var _err$message;\n                  if (!((_err$message = err.message) !== null && _err$message !== void 0 && _err$message.includes('already deleted'))) {\n                    console.error('Error in pose detection frame:', err);\n                  }\n                }\n              }\n            },\n            width: 640,\n            height: 480\n          });\n          await camera.start();\n          cameraRef.current = camera;\n        }\n        setIsInitialized(true);\n        setIsLoading(false);\n      } catch (err) {\n        console.error('Error initializing pose detection:', err);\n        setError('Failed to initialize pose detection. Please ensure you have granted camera permissions and try again.');\n        setIsLoading(false);\n      }\n    };\n    const timeoutId = setTimeout(() => {\n      var _webcamRef$current5;\n      if ((_webcamRef$current5 = webcamRef.current) !== null && _webcamRef$current5 !== void 0 && _webcamRef$current5.video) {\n        initializePose();\n      }\n    }, 1000);\n    return () => {\n      clearTimeout(timeoutId);\n      cleanup();\n    };\n  }, [onResults, cleanup, isPaused]);\n\n  // Cleanup on unmount\n  useEffect(() => {\n    return cleanup;\n  }, [cleanup]);\n  useEffect(() => {\n    // Initialize WebSocket connection\n    const ws = new WebSocket('ws://localhost:8000/ws/pose-feedback');\n    ws.onopen = () => {\n      console.log('Connected to feedback server');\n      setWsConnection(ws);\n    };\n    ws.onmessage = event => {\n      setPoseFeedback(event.data);\n    };\n    ws.onerror = error => {\n      console.error('WebSocket error:', error);\n    };\n    return () => {\n      if (ws) {\n        ws.close();\n      }\n    };\n  }, []);\n\n  // Send pose data to backend when accuracy updates\n  useEffect(() => {\n    if (wsConnection && selectedPose && Object.keys(segmentAccuracies).length > 0) {\n      const poseData = {\n        pose_name: selectedPose.name || 'unknown pose',\n        overall_accuracy: poseAccuracy,\n        segment_accuracies: segmentAccuracies\n      };\n      wsConnection.send(JSON.stringify(poseData));\n    }\n  }, [poseAccuracy, segmentAccuracies, selectedPose, wsConnection]);\n\n  // Add dynamic accuracy class\n  const getAccuracyClass = useCallback(accuracy => {\n    if (accuracy >= 95) return 'perfect';\n    if (accuracy >= 80) return 'high';\n    return '';\n  }, []);\n\n  // Add sound effects with error handling\n  const playSound = useCallback(type => {\n    const soundPaths = {\n      achievement: `${process.env.PUBLIC_URL}/sounds/achievement.mp3`,\n      levelUp: `${process.env.PUBLIC_URL}/sounds/level-up.mp3`,\n      score: `${process.env.PUBLIC_URL}/sounds/score.mp3`,\n      perfect: `${process.env.PUBLIC_URL}/sounds/perfect.mp3`\n    };\n    const path = soundPaths[type];\n    if (!path) return;\n    try {\n      const audio = new Audio(path);\n      audio.play().catch(err => {\n        console.warn(`Sound playback failed for ${type}:`, err);\n        // Continue without sound if file is missing or playback fails\n      });\n    } catch (err) {\n      console.warn(`Failed to create audio for ${type}:`, err);\n      // Continue without sound if audio creation fails\n    }\n  }, []);\n\n  // Add missing game state variables\n  const [gameState, setGameState] = useState({\n    level: 1,\n    totalScore: 0,\n    currentStreak: 0,\n    achievements: [],\n    highestAccuracy: 0\n  });\n  const [showAchievement, setShowAchievement] = useState(null);\n  const [scorePopup, setScorePopup] = useState(null);\n  const [accuracyRating, setAccuracyRating] = useState(null);\n  const [gameFeedback, setGameFeedback] = useState(null);\n\n  // Add handlers for game mechanics\n  const handleNewScore = useCallback((score, x, y) => {\n    setScorePopup({\n      score,\n      x,\n      y\n    });\n    setTimeout(() => setScorePopup(null), 1000);\n  }, []);\n  const handleNewAchievement = useCallback(achievement => {\n    setShowAchievement(achievement);\n    setTimeout(() => setShowAchievement(null), 3000);\n  }, []);\n\n  // Update the websocket message handler\n  useEffect(() => {\n    if (wsConnection) {\n      wsConnection.onmessage = event => {\n        try {\n          var _feedback$new_achieve;\n          const feedback = JSON.parse(event.data);\n\n          // Update game state with smooth animations\n          setGameState(prev => {\n            const newState = {\n              ...prev,\n              level: feedback.level,\n              totalScore: feedback.total_score,\n              currentStreak: feedback.current_streak,\n              highestAccuracy: Math.max(prev.highestAccuracy, poseAccuracy)\n            };\n\n            // Check for milestone achievements\n            if (newState.totalScore >= 1000 && !prev.achievements.includes('SCORE_MASTER')) {\n              handleNewAchievement('Score Master: Reached 1000 points!');\n              newState.achievements = [...prev.achievements, 'SCORE_MASTER'];\n            }\n            if (newState.currentStreak >= 5 && !prev.achievements.includes('STREAK_MASTER')) {\n              handleNewAchievement('Streak Master: 5 consecutive accurate poses!');\n              newState.achievements = [...prev.achievements, 'STREAK_MASTER'];\n            }\n            if (newState.highestAccuracy >= 95 && !prev.achievements.includes('PERFECT_FORM')) {\n              handleNewAchievement('Perfect Form: Achieved 95% accuracy!');\n              newState.achievements = [...prev.achievements, 'PERFECT_FORM'];\n            }\n            return newState;\n          });\n\n          // Handle achievements from backend\n          if (((_feedback$new_achieve = feedback.new_achievements) === null || _feedback$new_achieve === void 0 ? void 0 : _feedback$new_achieve.length) > 0) {\n            feedback.new_achievements.forEach(achievement => {\n              handleNewAchievement(achievement);\n              playSound('achievement');\n            });\n          }\n\n          // Handle score popup with position randomization\n          if (feedback.score) {\n            var _canvasRef$current;\n            const rect = (_canvasRef$current = canvasRef.current) === null || _canvasRef$current === void 0 ? void 0 : _canvasRef$current.getBoundingClientRect();\n            if (rect) {\n              const randomOffset = Math.random() * 100 - 50; // Random offset between -50 and 50\n              handleNewScore(feedback.score, rect.right - 100 + randomOffset, rect.top + 50 + Math.random() * 50);\n              playSound('score');\n            }\n          }\n\n          // Handle accuracy rating with special effects\n          setAccuracyRating(feedback.accuracy_rating);\n          if (feedback.accuracy_rating === 'PERFECT') {\n            playSound('perfect');\n            // Trigger confetti or special visual effect here if you add that feature\n          }\n\n          // Handle level up with special celebration\n          if (feedback.level_up) {\n            const newLevel = feedback.level;\n            handleNewAchievement(`🎉 Level Up! You've reached level ${newLevel}!`);\n            playSound('levelUp');\n\n            // Add level-specific achievements or bonuses\n            if (newLevel === 5) {\n              handleNewAchievement('Dedicated Yogi: Reached Level 5!');\n            } else if (newLevel === 10) {\n              handleNewAchievement('Yoga Master: Reached Level 10!');\n            }\n          }\n\n          // Update game feedback with typing animation effect\n          setGameFeedback(feedback.feedback);\n        } catch (error) {\n          console.error('Error processing websocket message:', error);\n        }\n      };\n    }\n  }, [wsConnection, playSound, handleNewAchievement, handleNewScore, poseAccuracy]);\n\n  // Add streak bonus calculation\n  const calculateStreakBonus = useCallback(streak => {\n    if (streak >= 10) return 3.0; // Triple points\n    if (streak >= 5) return 2.0; // Double points\n    if (streak >= 3) return 1.5; // 50% bonus\n    return 1.0;\n  }, []);\n\n  // Add pose difficulty bonus\n  const calculatePoseDifficulty = useCallback(poseName => {\n    const difficultyMap = {\n      'mountain-pose': 1.0,\n      'tree-pose': 1.2,\n      'warrior-pose': 1.3,\n      'triangle-pose': 1.4,\n      'crow-pose': 1.5\n    };\n    return difficultyMap[poseName] || 1.0;\n  }, []);\n\n  // Calculate final score with bonuses\n  const calculateFinalScore = useCallback((baseScore, streak, poseName) => {\n    const streakBonus = calculateStreakBonus(streak);\n    const difficultyBonus = calculatePoseDifficulty(poseName);\n    return Math.round(baseScore * streakBonus * difficultyBonus);\n  }, [calculateStreakBonus, calculatePoseDifficulty]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pose-tracker\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-stats\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"game-stat\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-label\",\n            children: \"Level\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 692,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-value\",\n            children: gameState.level\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 693,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"level-progress\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"level-progress-fill\",\n              style: {\n                width: `${gameState.totalScore % 1000 / 10}%`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 695,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 694,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 691,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"game-stat\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-label\",\n            children: \"Score\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 702,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-value\",\n            children: gameState.totalScore\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 703,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 701,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"game-stat\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-label\",\n            children: \"Streak\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 706,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-value\",\n            children: [gameState.currentStreak, \"x\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 707,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 705,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 690,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 689,\n      columnNumber: 13\n    }, this), scorePopup && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"score-popup\",\n      style: {\n        left: scorePopup.x,\n        top: scorePopup.y\n      },\n      children: [\"+\", scorePopup.score]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 714,\n      columnNumber: 17\n    }, this), showAchievement && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"achievement-popup\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"achievement-title\",\n        children: \"\\uD83C\\uDFC6 Achievement Unlocked!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 728,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"achievement-description\",\n        children: showAchievement\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 729,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 727,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pose-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Pose Tracking\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 734,\n        columnNumber: 17\n      }, this), !isSessionComplete ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: !isSessionStarted ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"session-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Ready to start your yoga session?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 739,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"You will perform \", availablePoses.length, \" poses, holding each for \", POSE_DURATION, \" seconds.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 740,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"start-button\",\n            onClick: handleStartSession,\n            disabled: !isInitialized || isLoading,\n            children: \"Start Session\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 741,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 738,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pose-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Current Pose: \", selectedPose === null || selectedPose === void 0 ? void 0 : (_selectedPose$name = selectedPose.name) === null || _selectedPose$name === void 0 ? void 0 : _selectedPose$name.replace(/-/g, ' ').replace(/_pose$/, '')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 751,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"timer\",\n            children: [\"Time Remaining: \", timeRemaining, \"s\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 752,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress\",\n            children: [\"Pose \", currentPoseIndex + 1, \" of \", availablePoses.length || (userPreferences === null || userPreferences === void 0 ? void 0 : userPreferences.poseCount) || 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 753,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"session-controls\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: `control-button ${isPaused ? 'resume' : 'pause'}`,\n              onClick: handlePauseResume,\n              children: isPaused ? 'Resume' : 'Pause'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 757,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"control-button reset\",\n              onClick: handleReset,\n              children: \"Reset\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 763,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 756,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 750,\n          columnNumber: 29\n        }, this)\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"session-complete\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Session Complete!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 775,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"You completed \", totalPosesCompleted, \" poses\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 776,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"start-button\",\n          onClick: handleReset,\n          children: \"Start New Session\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 777,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 774,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 733,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pose-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"webcam-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"webcam-container\",\n          children: [/*#__PURE__*/_jsxDEV(Webcam, {\n            ref: webcamRef,\n            videoConstraints: videoConstraints,\n            style: {\n              display: 'block'\n            },\n            mirrored: true,\n            onUserMediaError: err => {\n              console.error('Webcam error:', err);\n              setError('Failed to access camera. Please ensure you have granted camera permissions.');\n              setIsLoading(false);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 790,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n            ref: canvasRef,\n            className: \"pose-canvas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 801,\n            columnNumber: 25\n          }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loading-overlay\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"loading-spinner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 804,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"Loading pose detection...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 805,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 803,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 789,\n          columnNumber: 21\n        }, this), selectedPose && isSessionStarted && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reference-pose\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Reference Pose\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 811,\n            columnNumber: 29\n          }, this), console.log('Loading image for pose:', selectedPose.name), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: selectedPose.name.endsWith('-pose') ? `/training/photos/${selectedPose.name}.png` : `/training/photos/${selectedPose.name}-pose.png`,\n            alt: selectedPose.name.replace(/-/g, ' '),\n            className: \"reference-image\",\n            onError: e => {\n              console.error('Error loading image:', e.target.src);\n              e.target.style.display = 'none';\n            },\n            onLoad: () => console.log('Successfully loaded image for:', selectedPose.name)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 813,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 810,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 788,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stats-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"accuracy-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Overall Accuracy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 831,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `accuracy-value ${isSessionStarted ? getAccuracyClass(poseAccuracy) : 'perfect'}`,\n            children: [isSessionStarted ? poseAccuracy : 100, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 832,\n            columnNumber: 25\n          }, this), isSessionStarted && accuracyRating && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `accuracy-rating ${accuracyRating}`,\n            children: accuracyRating\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 836,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 830,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"segment-accuracies\",\n          children: isSessionStarted ? Object.entries(segmentAccuracies).map(([segment, data]) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"segment-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: segment.replace(/([A-Z])/g, ' $1').trim()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 846,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"accuracy-bar\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"accuracy-fill\",\n                style: {\n                  width: `${data.accuracy}%`\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 848,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 847,\n              columnNumber: 37\n            }, this)]\n          }, segment, true, {\n            fileName: _jsxFileName,\n            lineNumber: 845,\n            columnNumber: 33\n          }, this)) :\n          // Show default 100% segments before session starts\n          Object.keys(bodySegments).map(segment => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"segment-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: segment.replace(/([A-Z])/g, ' $1').trim()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 859,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"accuracy-bar\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"accuracy-fill\",\n                style: {\n                  width: '100%'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 861,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 860,\n              columnNumber: 37\n            }, this)]\n          }, segment, true, {\n            fileName: _jsxFileName,\n            lineNumber: 858,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 842,\n          columnNumber: 21\n        }, this), isSessionStarted && gameFeedback && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"feedback-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Instructor Feedback\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 873,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"feedback-section\",\n            children: gameFeedback\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 874,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 872,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 829,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 787,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 884,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"retry-button\",\n        onClick: () => {\n          setError(null);\n          window.location.reload();\n        },\n        children: \"Retry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 885,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 883,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 687,\n    columnNumber: 9\n  }, this);\n};\n_s(PoseTracker, \"O5ZacHlZJU6ySIFPtwSO3zamDe8=\");\n_c = PoseTracker;\nexport default PoseTracker;\nvar _c;\n$RefreshReg$(_c, \"PoseTracker\");","map":{"version":3,"names":["React","useRef","useEffect","useState","useCallback","useMemo","Webcam","Camera","Pose","jsxDEV","_jsxDEV","Fragment","_Fragment","PoseTracker","userPreferences","_s","_selectedPose$name","webcamRef","canvasRef","poseRef","cameraRef","cleanupInProgressRef","isLoading","setIsLoading","error","setError","poseAccuracy","setPoseAccuracy","segmentAccuracies","setSegmentAccuracies","poseFeedback","setPoseFeedback","wsConnection","setWsConnection","selectedPose","setSelectedPose","availablePoses","setAvailablePoses","currentPoseIndex","setCurrentPoseIndex","timeRemaining","setTimeRemaining","isSessionComplete","setIsSessionComplete","totalPosesCompleted","setTotalPosesCompleted","isSessionStarted","setIsSessionStarted","isPaused","setIsPaused","isInitialized","setIsInitialized","POSE_DURATION","poseNames","lastProcessedTime","FRAME_RATE","FRAME_INTERVAL","videoConstraints","width","height","facingMode","bodySegments","head","upperBody","torso","lowerBody","requiredPoints","segmentWeights","normalizePose","landmarks","leftShoulder","rightShoulder","shoulderCenterX","x","shoulderCenterY","y","shoulderWidth","Math","sqrt","pow","map","landmark","visibility","calculatePoseAccuracy","userLandmarks","targetPose","total","segments","normalizedUser","normalizedTarget","visibleSegments","segment","points","Object","entries","requiredVisible","every","index","userPoint","targetPoint","segmentTotal","segmentPoints","userLandmark","targetLandmark","userAngle","atan2","targetAngle","angleDiff","abs","distance","hypot","angleAccuracy","max","PI","distanceAccuracy","pointAccuracy","weight","min","rawAccuracy","accuracy","length","totalAccuracy","totalWeight","data","round","onResults","results","_webcamRef$current","_webcamRef$current$vi","_webcamRef$current2","_webcamRef$current2$v","current","poseLandmarks","now","performance","canvasElement","canvasCtx","getContext","videoWidth","video","videoHeight","accuracyData","save","clearRect","scale","translate","lineWidth","drawConnection","start","end","color","startPoint","endPoint","beginPath","moveTo","lineTo","strokeStyle","stroke","upperBodyColor","headColor","torsoColor","lowerBodyColor","forEach","arc","fillStyle","fill","restore","loadPoses","count","poseCount","console","log","posesToLoad","slice","loadedPoses","Promise","all","poseName","response","fetch","process","env","PUBLIC_URL","ok","Error","poseData","json","name","err","cleanup","stop","close","timer","setInterval","prev","currentIndex","nextIndex","clearInterval","handleStartSession","handlePauseResume","handleReset","initializePose","_webcamRef$current3","pose","locateFile","file","setOptions","modelComplexity","smoothLandmarks","enableSegmentation","smoothSegmentation","minDetectionConfidence","minTrackingConfidence","initialize","camera","onFrame","_webcamRef$current4","send","image","_err$message","message","includes","timeoutId","setTimeout","_webcamRef$current5","clearTimeout","ws","WebSocket","onopen","onmessage","event","onerror","keys","pose_name","overall_accuracy","segment_accuracies","JSON","stringify","getAccuracyClass","playSound","type","soundPaths","achievement","levelUp","score","perfect","path","audio","Audio","play","catch","warn","gameState","setGameState","level","totalScore","currentStreak","achievements","highestAccuracy","showAchievement","setShowAchievement","scorePopup","setScorePopup","accuracyRating","setAccuracyRating","gameFeedback","setGameFeedback","handleNewScore","handleNewAchievement","_feedback$new_achieve","feedback","parse","newState","total_score","current_streak","new_achievements","_canvasRef$current","rect","getBoundingClientRect","randomOffset","random","right","top","accuracy_rating","level_up","newLevel","calculateStreakBonus","streak","calculatePoseDifficulty","difficultyMap","calculateFinalScore","baseScore","streakBonus","difficultyBonus","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","left","onClick","disabled","replace","ref","display","mirrored","onUserMediaError","src","endsWith","alt","onError","e","target","onLoad","trim","window","location","reload","_c","$RefreshReg$"],"sources":["C:/Users/Quant/Documents/Programming/Projects/Hackathon/MakeUofT/frontend/src/components/PoseTracker.js"],"sourcesContent":["import React, { useRef, useEffect, useState, useCallback, useMemo } from 'react';\nimport Webcam from 'react-webcam';\nimport { Camera } from '@mediapipe/camera_utils';\nimport { Pose } from '@mediapipe/pose';\nimport './PoseTracker.css';\n\nconst PoseTracker = ({ userPreferences }) => {\n    const webcamRef = useRef(null);\n    const canvasRef = useRef(null);\n    const poseRef = useRef(null);\n    const cameraRef = useRef(null);\n    const cleanupInProgressRef = useRef(false);\n    const [isLoading, setIsLoading] = useState(true);\n    const [error, setError] = useState(null);\n    const [poseAccuracy, setPoseAccuracy] = useState(0);\n    const [segmentAccuracies, setSegmentAccuracies] = useState({});\n    const [poseFeedback, setPoseFeedback] = useState('');\n    const [wsConnection, setWsConnection] = useState(null);\n    const [selectedPose, setSelectedPose] = useState(null);\n\n    // New state variables for pose cycling\n    const [availablePoses, setAvailablePoses] = useState([]);\n    const [currentPoseIndex, setCurrentPoseIndex] = useState(0);\n    const [timeRemaining, setTimeRemaining] = useState(15);\n    const [isSessionComplete, setIsSessionComplete] = useState(false);\n    const [totalPosesCompleted, setTotalPosesCompleted] = useState(0);\n\n    // Add new state variables for session control\n    const [isSessionStarted, setIsSessionStarted] = useState(false);\n    const [isPaused, setIsPaused] = useState(false);\n    const [isInitialized, setIsInitialized] = useState(false);\n\n    // Constants\n    const POSE_DURATION = 15; // seconds\n    const poseNames = [\n        'crescent-lunge',\n        'dancers-pose',\n        'high-plank-pose',\n        'mountain-pose',\n        'seated-forward-fold',\n        'tree-pose',\n        'triangle-pose',\n        'upward-facing-dog'\n    ];\n\n    // Throttle pose detection frames\n    const lastProcessedTime = useRef(0);\n    const FRAME_RATE = 30; // Process 30 frames per second\n    const FRAME_INTERVAL = 1000 / FRAME_RATE;\n\n    // Memoize video constraints\n    const videoConstraints = useMemo(() => ({\n        width: 640,\n        height: 480,\n        facingMode: 'user',\n    }), []);\n\n    // Memoize segment definitions\n    const bodySegments = useMemo(() => ({\n        head: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10],\n        upperBody: [11, 12, 13, 14, 15, 16],\n        torso: [11, 12, 23, 24],\n        lowerBody: [23, 24, 25, 26, 27, 28]\n    }), []);\n\n    const requiredPoints = useMemo(() => ({\n        head: [0, 1, 4],\n        upperBody: [11, 12],\n        torso: [11, 12, 23, 24],\n        lowerBody: [23, 24, 25, 26]\n    }), []);\n\n    const segmentWeights = useMemo(() => ({\n        head: 1,\n        upperBody: 1.2,\n        torso: 1.2,\n        lowerBody: 1\n    }), []);\n\n    // Memoize normalization function\n    const normalizePose = useCallback((landmarks) => {\n        const leftShoulder = landmarks[11];\n        const rightShoulder = landmarks[12];\n\n        const shoulderCenterX = (leftShoulder.x + rightShoulder.x) / 2;\n        const shoulderCenterY = (leftShoulder.y + rightShoulder.y) / 2;\n        const shoulderWidth = Math.sqrt(\n            Math.pow(rightShoulder.x - leftShoulder.x, 2) +\n            Math.pow(rightShoulder.y - leftShoulder.y, 2)\n        );\n\n        return landmarks.map(landmark => ({\n            x: (landmark.x - shoulderCenterX) / shoulderWidth,\n            y: (landmark.y - shoulderCenterY) / shoulderWidth,\n            visibility: landmark.visibility\n        }));\n    }, []);\n\n    // Optimize pose accuracy calculation\n    const calculatePoseAccuracy = useCallback((userLandmarks, targetPose) => {\n        if (!targetPose?.landmarks || !userLandmarks) return { total: 0, segments: {} };\n\n        const normalizedUser = normalizePose(userLandmarks);\n        const normalizedTarget = normalizePose(targetPose.landmarks);\n\n        let segmentAccuracies = {};\n        let visibleSegments = 0;\n\n        for (const [segment, points] of Object.entries(bodySegments)) {\n            const requiredVisible = requiredPoints[segment].every(index => {\n                const userPoint = normalizedUser[index];\n                const targetPoint = normalizedTarget[index];\n                return userPoint.visibility > 0.5 && targetPoint.visibility > 0.5;\n            });\n\n            if (!requiredVisible) continue;\n\n            let segmentTotal = 0;\n            let segmentPoints = 0;\n\n            for (const index of points) {\n                const userLandmark = normalizedUser[index];\n                const targetLandmark = normalizedTarget[index];\n\n                if (userLandmark.visibility > 0.5 && targetLandmark.visibility > 0.5) {\n                    const userAngle = Math.atan2(userLandmark.y, userLandmark.x);\n                    const targetAngle = Math.atan2(targetLandmark.y, targetLandmark.x);\n                    const angleDiff = Math.abs(userAngle - targetAngle);\n\n                    const distance = Math.hypot(\n                        userLandmark.x - targetLandmark.x,\n                        userLandmark.y - targetLandmark.y\n                    );\n\n                    const angleAccuracy = Math.max(0, 1 - (angleDiff / Math.PI));\n                    const distanceAccuracy = Math.max(0, 1 - (distance / 0.5));\n                    const pointAccuracy = (angleAccuracy * 0.7 + distanceAccuracy * 0.3);\n\n                    const weight = Math.min(userLandmark.visibility, targetLandmark.visibility);\n                    segmentTotal += pointAccuracy * weight;\n                    segmentPoints += weight;\n                }\n            }\n\n            if (segmentPoints > 0) {\n                const rawAccuracy = (segmentTotal / segmentPoints) * 100;\n                segmentAccuracies[segment] = {\n                    accuracy: Math.min(100, Math.max(0, rawAccuracy)),\n                    visibility: segmentPoints / points.length\n                };\n                visibleSegments++;\n            }\n        }\n\n        if (visibleSegments === 0) return { total: 0, segments: {} };\n\n        let totalAccuracy = 0;\n        let totalWeight = 0;\n\n        for (const [segment, data] of Object.entries(segmentAccuracies)) {\n            const weight = segmentWeights[segment] * data.visibility;\n            totalAccuracy += data.accuracy * weight;\n            totalWeight += weight;\n        }\n\n        return {\n            total: Math.round(totalWeight > 0 ? totalAccuracy / totalWeight : 0),\n            segments: segmentAccuracies\n        };\n    }, [bodySegments, requiredPoints, segmentWeights, normalizePose]);\n\n    // Optimize onResults callback\n    const onResults = useCallback((results) => {\n        if (!canvasRef.current || !results.poseLandmarks) return;\n\n        // Only process pose detection if session is started and not paused\n        if (!isSessionStarted || isPaused) return;\n\n        // Throttle frame processing\n        const now = performance.now();\n        if (now - lastProcessedTime.current < FRAME_INTERVAL) return;\n        lastProcessedTime.current = now;\n\n        const canvasElement = canvasRef.current;\n        const canvasCtx = canvasElement.getContext('2d');\n        const videoWidth = webcamRef.current?.video?.videoWidth || 640;\n        const videoHeight = webcamRef.current?.video?.videoHeight || 480;\n\n        // Set canvas dimensions to match video\n        if (canvasElement.width !== videoWidth) {\n            canvasElement.width = videoWidth;\n            canvasElement.height = videoHeight;\n        }\n\n        // Calculate pose accuracy if we have a selected pose and session is started\n        if (selectedPose?.landmarks && isSessionStarted && !isPaused) {\n            const accuracyData = calculatePoseAccuracy(results.poseLandmarks, selectedPose);\n            setPoseAccuracy(accuracyData.total);\n            setSegmentAccuracies(accuracyData.segments);\n        }\n\n        // Draw pose landmarks with optimized rendering\n        if (results.poseLandmarks) {\n            canvasCtx.save();\n            canvasCtx.clearRect(0, 0, videoWidth, videoHeight);\n            canvasCtx.scale(-1, 1);\n            canvasCtx.translate(-videoWidth, 0);\n\n            // Draw connectors\n            canvasCtx.lineWidth = 3;\n\n            // Draw pose connections\n            function drawConnection(landmarks, start, end, color) {\n                const startPoint = landmarks[start];\n                const endPoint = landmarks[end];\n\n                if (startPoint.visibility > 0.5 && endPoint.visibility > 0.5) {\n                    canvasCtx.beginPath();\n                    canvasCtx.moveTo(startPoint.x * videoWidth, startPoint.y * videoHeight);\n                    canvasCtx.lineTo(endPoint.x * videoWidth, endPoint.y * videoHeight);\n                    canvasCtx.strokeStyle = color;\n                    canvasCtx.stroke();\n                }\n            }\n\n            const landmarks = results.poseLandmarks;\n\n            // Draw body parts with different colors\n            // Upper body (green)\n            const upperBodyColor = '#00FF00';\n            drawConnection(landmarks, 11, 12, upperBodyColor); // shoulders\n            drawConnection(landmarks, 11, 13, upperBodyColor); // left upper arm\n            drawConnection(landmarks, 13, 15, upperBodyColor); // left lower arm\n            drawConnection(landmarks, 12, 14, upperBodyColor); // right upper arm\n            drawConnection(landmarks, 14, 16, upperBodyColor); // right lower arm\n\n            // Head (red)\n            const headColor = '#FF0000';\n            drawConnection(landmarks, 0, 1, headColor);\n            drawConnection(landmarks, 1, 2, headColor);\n            drawConnection(landmarks, 2, 3, headColor);\n            drawConnection(landmarks, 3, 7, headColor);\n            drawConnection(landmarks, 0, 4, headColor);\n            drawConnection(landmarks, 4, 5, headColor);\n            drawConnection(landmarks, 5, 6, headColor);\n            drawConnection(landmarks, 6, 8, headColor);\n\n            // Torso (blue)\n            const torsoColor = '#0000FF';\n            drawConnection(landmarks, 11, 23, torsoColor); // left shoulder to hip\n            drawConnection(landmarks, 12, 24, torsoColor); // right shoulder to hip\n            drawConnection(landmarks, 23, 24, torsoColor); // hips\n\n            // Lower body (yellow)\n            const lowerBodyColor = '#FFFF00';\n            drawConnection(landmarks, 23, 25, lowerBodyColor); // left hip to knee\n            drawConnection(landmarks, 25, 27, lowerBodyColor); // left knee to ankle\n            drawConnection(landmarks, 24, 26, lowerBodyColor); // right hip to knee\n            drawConnection(landmarks, 26, 28, lowerBodyColor); // right knee to ankle\n\n            // Draw landmarks\n            landmarks.forEach((landmark, index) => {\n                if (landmark.visibility > 0.5) {\n                    canvasCtx.beginPath();\n                    canvasCtx.arc(\n                        landmark.x * videoWidth,\n                        landmark.y * videoHeight,\n                        5,\n                        0,\n                        2 * Math.PI\n                    );\n                    canvasCtx.fillStyle = '#FFFFFF';\n                    canvasCtx.fill();\n                    canvasCtx.strokeStyle = '#000000';\n                    canvasCtx.stroke();\n                }\n            });\n\n            canvasCtx.restore();\n        }\n    }, [selectedPose, isPaused, calculatePoseAccuracy, isSessionStarted]);\n\n    useEffect(() => {\n        const loadPoses = async () => {\n            try {\n                setIsLoading(true);\n                setError(null);\n\n                // Default to 1 pose if no preferences\n                const count = userPreferences?.poseCount || 1;\n                console.log('Loading poses with count:', count);\n\n                // Load all poses up to the user's poseCount\n                const posesToLoad = poseNames.slice(0, count);\n                console.log('Poses to load:', posesToLoad);\n\n                const loadedPoses = await Promise.all(\n                    posesToLoad.map(async (poseName) => {\n                        try {\n                            const response = await fetch(`${process.env.PUBLIC_URL}/pose_results/${poseName}_pose.json`);\n                            if (!response.ok) {\n                                throw new Error(`Failed to load pose: ${poseName}`);\n                            }\n                            const poseData = await response.json();\n                            return { ...poseData, name: poseName };\n                        } catch (err) {\n                            console.error(`Error loading pose ${poseName}:`, err);\n                            throw err;\n                        }\n                    })\n                );\n\n                console.log('Loaded poses:', loadedPoses);\n                setAvailablePoses(loadedPoses);\n                if (loadedPoses.length > 0) {\n                    setSelectedPose(loadedPoses[0]);\n                }\n                setIsLoading(false);\n            } catch (err) {\n                console.error('Error loading pose data:', err);\n                setError('Failed to load pose data. Please check your internet connection and try again.');\n                setIsLoading(false);\n            }\n        };\n\n        if (userPreferences) {\n            loadPoses();\n        }\n    }, [userPreferences]);\n\n    const cleanup = useCallback(() => {\n        if (cleanupInProgressRef.current) return;\n        cleanupInProgressRef.current = true;\n\n        try {\n            if (cameraRef.current) {\n                cameraRef.current.stop();\n                cameraRef.current = null;\n            }\n            if (poseRef.current) {\n                poseRef.current.close();\n                poseRef.current = null;\n            }\n        } catch (err) {\n            console.error('Error during cleanup:', err);\n        } finally {\n            cleanupInProgressRef.current = false;\n        }\n    }, []);\n\n    // Timer effect for pose cycling\n    useEffect(() => {\n        if (!availablePoses.length || isSessionComplete || !isSessionStarted || isPaused) return;\n\n        const timer = setInterval(() => {\n            setTimeRemaining(prev => {\n                if (prev <= 1) {\n                    // Time to switch poses\n                    setCurrentPoseIndex(currentIndex => {\n                        const nextIndex = currentIndex + 1;\n                        // Increment completed poses count for the pose that just finished\n                        setTotalPosesCompleted(prev => prev + 1);\n\n                        if (nextIndex >= availablePoses.length) {\n                            setIsSessionComplete(true);\n                            cleanup();\n                            return currentIndex;\n                        }\n                        setSelectedPose(availablePoses[nextIndex]);\n                        return nextIndex;\n                    });\n                    return POSE_DURATION;\n                }\n                return prev - 1;\n            });\n        }, 1000);\n\n        return () => clearInterval(timer);\n    }, [availablePoses, isSessionComplete, cleanup, isSessionStarted, isPaused]);\n\n    // Handler for starting the session\n    const handleStartSession = useCallback(() => {\n        setIsSessionStarted(true);\n        setIsPaused(false);\n        setTimeRemaining(POSE_DURATION);\n        setTotalPosesCompleted(0);\n    }, []);\n\n    // Handler for pausing/resuming the session\n    const handlePauseResume = useCallback(() => {\n        setIsPaused(prev => !prev);\n    }, []);\n\n    // Handler for resetting the session\n    const handleReset = useCallback(() => {\n        cleanup();\n        setIsSessionStarted(false);\n        setIsPaused(false);\n        setIsSessionComplete(false);\n        setCurrentPoseIndex(0);\n        setTimeRemaining(POSE_DURATION);\n        setTotalPosesCompleted(0);\n        if (availablePoses.length > 0) {\n            setSelectedPose(availablePoses[0]);\n        }\n    }, [cleanup, availablePoses]);\n\n    // Optimize MediaPipe initialization\n    useEffect(() => {\n        const initializePose = async () => {\n            try {\n                setIsLoading(true);\n                setError(null);\n\n                cleanup();\n\n                const pose = new Pose({\n                    locateFile: (file) => `https://cdn.jsdelivr.net/npm/@mediapipe/pose/${file}`\n                });\n\n                pose.setOptions({\n                    modelComplexity: 1,\n                    smoothLandmarks: true,\n                    enableSegmentation: false,\n                    smoothSegmentation: false,\n                    minDetectionConfidence: 0.5,\n                    minTrackingConfidence: 0.5\n                });\n\n                await pose.initialize();\n                pose.onResults(onResults);\n                poseRef.current = pose;\n\n                if (webcamRef.current?.video) {\n                    const camera = new Camera(webcamRef.current.video, {\n                        onFrame: async () => {\n                            if (webcamRef.current?.video && poseRef.current && !cleanupInProgressRef.current && !isPaused) {\n                                try {\n                                    await poseRef.current.send({ image: webcamRef.current.video });\n                                } catch (err) {\n                                    if (!err.message?.includes('already deleted')) {\n                                        console.error('Error in pose detection frame:', err);\n                                    }\n                                }\n                            }\n                        },\n                        width: 640,\n                        height: 480\n                    });\n\n                    await camera.start();\n                    cameraRef.current = camera;\n                }\n\n                setIsInitialized(true);\n                setIsLoading(false);\n            } catch (err) {\n                console.error('Error initializing pose detection:', err);\n                setError('Failed to initialize pose detection. Please ensure you have granted camera permissions and try again.');\n                setIsLoading(false);\n            }\n        };\n\n        const timeoutId = setTimeout(() => {\n            if (webcamRef.current?.video) {\n                initializePose();\n            }\n        }, 1000);\n\n        return () => {\n            clearTimeout(timeoutId);\n            cleanup();\n        };\n    }, [onResults, cleanup, isPaused]);\n\n    // Cleanup on unmount\n    useEffect(() => {\n        return cleanup;\n    }, [cleanup]);\n\n    useEffect(() => {\n        // Initialize WebSocket connection\n        const ws = new WebSocket('ws://localhost:8000/ws/pose-feedback');\n\n        ws.onopen = () => {\n            console.log('Connected to feedback server');\n            setWsConnection(ws);\n        };\n\n        ws.onmessage = (event) => {\n            setPoseFeedback(event.data);\n        };\n\n        ws.onerror = (error) => {\n            console.error('WebSocket error:', error);\n        };\n\n        return () => {\n            if (ws) {\n                ws.close();\n            }\n        };\n    }, []);\n\n    // Send pose data to backend when accuracy updates\n    useEffect(() => {\n        if (wsConnection && selectedPose && Object.keys(segmentAccuracies).length > 0) {\n            const poseData = {\n                pose_name: selectedPose.name || 'unknown pose',\n                overall_accuracy: poseAccuracy,\n                segment_accuracies: segmentAccuracies\n            };\n            wsConnection.send(JSON.stringify(poseData));\n        }\n    }, [poseAccuracy, segmentAccuracies, selectedPose, wsConnection]);\n\n    // Add dynamic accuracy class\n    const getAccuracyClass = useCallback((accuracy) => {\n        if (accuracy >= 95) return 'perfect';\n        if (accuracy >= 80) return 'high';\n        return '';\n    }, []);\n\n    // Add sound effects with error handling\n    const playSound = useCallback((type) => {\n        const soundPaths = {\n            achievement: `${process.env.PUBLIC_URL}/sounds/achievement.mp3`,\n            levelUp: `${process.env.PUBLIC_URL}/sounds/level-up.mp3`,\n            score: `${process.env.PUBLIC_URL}/sounds/score.mp3`,\n            perfect: `${process.env.PUBLIC_URL}/sounds/perfect.mp3`\n        };\n\n        const path = soundPaths[type];\n        if (!path) return;\n\n        try {\n            const audio = new Audio(path);\n            audio.play().catch(err => {\n                console.warn(`Sound playback failed for ${type}:`, err);\n                // Continue without sound if file is missing or playback fails\n            });\n        } catch (err) {\n            console.warn(`Failed to create audio for ${type}:`, err);\n            // Continue without sound if audio creation fails\n        }\n    }, []);\n\n    // Add missing game state variables\n    const [gameState, setGameState] = useState({\n        level: 1,\n        totalScore: 0,\n        currentStreak: 0,\n        achievements: [],\n        highestAccuracy: 0\n    });\n    const [showAchievement, setShowAchievement] = useState(null);\n    const [scorePopup, setScorePopup] = useState(null);\n    const [accuracyRating, setAccuracyRating] = useState(null);\n    const [gameFeedback, setGameFeedback] = useState(null);\n\n    // Add handlers for game mechanics\n    const handleNewScore = useCallback((score, x, y) => {\n        setScorePopup({ score, x, y });\n        setTimeout(() => setScorePopup(null), 1000);\n    }, []);\n\n    const handleNewAchievement = useCallback((achievement) => {\n        setShowAchievement(achievement);\n        setTimeout(() => setShowAchievement(null), 3000);\n    }, []);\n\n    // Update the websocket message handler\n    useEffect(() => {\n        if (wsConnection) {\n            wsConnection.onmessage = (event) => {\n                try {\n                    const feedback = JSON.parse(event.data);\n\n                    // Update game state with smooth animations\n                    setGameState(prev => {\n                        const newState = {\n                            ...prev,\n                            level: feedback.level,\n                            totalScore: feedback.total_score,\n                            currentStreak: feedback.current_streak,\n                            highestAccuracy: Math.max(prev.highestAccuracy, poseAccuracy)\n                        };\n\n                        // Check for milestone achievements\n                        if (newState.totalScore >= 1000 && !prev.achievements.includes('SCORE_MASTER')) {\n                            handleNewAchievement('Score Master: Reached 1000 points!');\n                            newState.achievements = [...prev.achievements, 'SCORE_MASTER'];\n                        }\n                        if (newState.currentStreak >= 5 && !prev.achievements.includes('STREAK_MASTER')) {\n                            handleNewAchievement('Streak Master: 5 consecutive accurate poses!');\n                            newState.achievements = [...prev.achievements, 'STREAK_MASTER'];\n                        }\n                        if (newState.highestAccuracy >= 95 && !prev.achievements.includes('PERFECT_FORM')) {\n                            handleNewAchievement('Perfect Form: Achieved 95% accuracy!');\n                            newState.achievements = [...prev.achievements, 'PERFECT_FORM'];\n                        }\n\n                        return newState;\n                    });\n\n                    // Handle achievements from backend\n                    if (feedback.new_achievements?.length > 0) {\n                        feedback.new_achievements.forEach(achievement => {\n                            handleNewAchievement(achievement);\n                            playSound('achievement');\n                        });\n                    }\n\n                    // Handle score popup with position randomization\n                    if (feedback.score) {\n                        const rect = canvasRef.current?.getBoundingClientRect();\n                        if (rect) {\n                            const randomOffset = Math.random() * 100 - 50; // Random offset between -50 and 50\n                            handleNewScore(\n                                feedback.score,\n                                rect.right - 100 + randomOffset,\n                                rect.top + 50 + Math.random() * 50\n                            );\n                            playSound('score');\n                        }\n                    }\n\n                    // Handle accuracy rating with special effects\n                    setAccuracyRating(feedback.accuracy_rating);\n                    if (feedback.accuracy_rating === 'PERFECT') {\n                        playSound('perfect');\n                        // Trigger confetti or special visual effect here if you add that feature\n                    }\n\n                    // Handle level up with special celebration\n                    if (feedback.level_up) {\n                        const newLevel = feedback.level;\n                        handleNewAchievement(`🎉 Level Up! You've reached level ${newLevel}!`);\n                        playSound('levelUp');\n\n                        // Add level-specific achievements or bonuses\n                        if (newLevel === 5) {\n                            handleNewAchievement('Dedicated Yogi: Reached Level 5!');\n                        } else if (newLevel === 10) {\n                            handleNewAchievement('Yoga Master: Reached Level 10!');\n                        }\n                    }\n\n                    // Update game feedback with typing animation effect\n                    setGameFeedback(feedback.feedback);\n\n                } catch (error) {\n                    console.error('Error processing websocket message:', error);\n                }\n            };\n        }\n    }, [wsConnection, playSound, handleNewAchievement, handleNewScore, poseAccuracy]);\n\n    // Add streak bonus calculation\n    const calculateStreakBonus = useCallback((streak) => {\n        if (streak >= 10) return 3.0; // Triple points\n        if (streak >= 5) return 2.0;  // Double points\n        if (streak >= 3) return 1.5;  // 50% bonus\n        return 1.0;\n    }, []);\n\n    // Add pose difficulty bonus\n    const calculatePoseDifficulty = useCallback((poseName) => {\n        const difficultyMap = {\n            'mountain-pose': 1.0,\n            'tree-pose': 1.2,\n            'warrior-pose': 1.3,\n            'triangle-pose': 1.4,\n            'crow-pose': 1.5\n        };\n        return difficultyMap[poseName] || 1.0;\n    }, []);\n\n    // Calculate final score with bonuses\n    const calculateFinalScore = useCallback((baseScore, streak, poseName) => {\n        const streakBonus = calculateStreakBonus(streak);\n        const difficultyBonus = calculatePoseDifficulty(poseName);\n        return Math.round(baseScore * streakBonus * difficultyBonus);\n    }, [calculateStreakBonus, calculatePoseDifficulty]);\n\n    return (\n        <div className=\"pose-tracker\">\n            {/* Game Overlay */}\n            <div className=\"game-overlay\">\n                <div className=\"game-stats\">\n                    <div className=\"game-stat\">\n                        <span className=\"stat-label\">Level</span>\n                        <span className=\"stat-value\">{gameState.level}</span>\n                        <div className=\"level-progress\">\n                            <div\n                                className=\"level-progress-fill\"\n                                style={{ width: `${(gameState.totalScore % 1000) / 10}%` }}\n                            />\n                        </div>\n                    </div>\n                    <div className=\"game-stat\">\n                        <span className=\"stat-label\">Score</span>\n                        <span className=\"stat-value\">{gameState.totalScore}</span>\n                    </div>\n                    <div className=\"game-stat\">\n                        <span className=\"stat-label\">Streak</span>\n                        <span className=\"stat-value\">{gameState.currentStreak}x</span>\n                    </div>\n                </div>\n            </div>\n\n            {/* Score Popup */}\n            {scorePopup && (\n                <div\n                    className=\"score-popup\"\n                    style={{\n                        left: scorePopup.x,\n                        top: scorePopup.y\n                    }}\n                >\n                    +{scorePopup.score}\n                </div>\n            )}\n\n            {/* Achievement Popup */}\n            {showAchievement && (\n                <div className=\"achievement-popup\">\n                    <div className=\"achievement-title\">🏆 Achievement Unlocked!</div>\n                    <div className=\"achievement-description\">{showAchievement}</div>\n                </div>\n            )}\n\n            <div className=\"pose-header\">\n                <h1>Pose Tracking</h1>\n                {!isSessionComplete ? (\n                    <>\n                        {!isSessionStarted ? (\n                            <div className=\"session-controls\">\n                                <h3>Ready to start your yoga session?</h3>\n                                <p>You will perform {availablePoses.length} poses, holding each for {POSE_DURATION} seconds.</p>\n                                <button\n                                    className=\"start-button\"\n                                    onClick={handleStartSession}\n                                    disabled={!isInitialized || isLoading}\n                                >\n                                    Start Session\n                                </button>\n                            </div>\n                        ) : (\n                            <div className=\"pose-info\">\n                                <h3>Current Pose: {selectedPose?.name?.replace(/-/g, ' ').replace(/_pose$/, '')}</h3>\n                                <div className=\"timer\">Time Remaining: {timeRemaining}s</div>\n                                <div className=\"progress\">\n                                    Pose {currentPoseIndex + 1} of {availablePoses.length || userPreferences?.poseCount || 1}\n                                </div>\n                                <div className=\"session-controls\">\n                                    <button\n                                        className={`control-button ${isPaused ? 'resume' : 'pause'}`}\n                                        onClick={handlePauseResume}\n                                    >\n                                        {isPaused ? 'Resume' : 'Pause'}\n                                    </button>\n                                    <button\n                                        className=\"control-button reset\"\n                                        onClick={handleReset}\n                                    >\n                                        Reset\n                                    </button>\n                                </div>\n                            </div>\n                        )}\n                    </>\n                ) : (\n                    <div className=\"session-complete\">\n                        <h3>Session Complete!</h3>\n                        <p>You completed {totalPosesCompleted} poses</p>\n                        <button\n                            className=\"start-button\"\n                            onClick={handleReset}\n                        >\n                            Start New Session\n                        </button>\n                    </div>\n                )}\n            </div>\n\n            <div className=\"pose-container\">\n                <div className=\"webcam-section\">\n                    <div className=\"webcam-container\">\n                        <Webcam\n                            ref={webcamRef}\n                            videoConstraints={videoConstraints}\n                            style={{ display: 'block' }}\n                            mirrored={true}\n                            onUserMediaError={(err) => {\n                                console.error('Webcam error:', err);\n                                setError('Failed to access camera. Please ensure you have granted camera permissions.');\n                                setIsLoading(false);\n                            }}\n                        />\n                        <canvas ref={canvasRef} className=\"pose-canvas\" />\n                        {isLoading && (\n                            <div className=\"loading-overlay\">\n                                <div className=\"loading-spinner\"></div>\n                                <div>Loading pose detection...</div>\n                            </div>\n                        )}\n                    </div>\n                    {selectedPose && isSessionStarted && (\n                        <div className=\"reference-pose\">\n                            <h3>Reference Pose</h3>\n                            {console.log('Loading image for pose:', selectedPose.name)}\n                            <img\n                                src={selectedPose.name.endsWith('-pose')\n                                    ? `/training/photos/${selectedPose.name}.png`\n                                    : `/training/photos/${selectedPose.name}-pose.png`}\n                                alt={selectedPose.name.replace(/-/g, ' ')}\n                                className=\"reference-image\"\n                                onError={(e) => {\n                                    console.error('Error loading image:', e.target.src);\n                                    e.target.style.display = 'none';\n                                }}\n                                onLoad={() => console.log('Successfully loaded image for:', selectedPose.name)}\n                            />\n                        </div>\n                    )}\n                </div>\n\n                <div className=\"stats-section\">\n                    <div className=\"accuracy-card\">\n                        <h3>Overall Accuracy</h3>\n                        <div className={`accuracy-value ${isSessionStarted ? getAccuracyClass(poseAccuracy) : 'perfect'}`}>\n                            {isSessionStarted ? poseAccuracy : 100}%\n                        </div>\n                        {isSessionStarted && accuracyRating && (\n                            <div className={`accuracy-rating ${accuracyRating}`}>\n                                {accuracyRating}\n                            </div>\n                        )}\n                    </div>\n\n                    <div className=\"segment-accuracies\">\n                        {isSessionStarted ? (\n                            Object.entries(segmentAccuracies).map(([segment, data]) => (\n                                <div key={segment} className=\"segment-item\">\n                                    <label>{segment.replace(/([A-Z])/g, ' $1').trim()}</label>\n                                    <div className=\"accuracy-bar\">\n                                        <div\n                                            className=\"accuracy-fill\"\n                                            style={{ width: `${data.accuracy}%` }}\n                                        />\n                                    </div>\n                                </div>\n                            ))\n                        ) : (\n                            // Show default 100% segments before session starts\n                            Object.keys(bodySegments).map((segment) => (\n                                <div key={segment} className=\"segment-item\">\n                                    <label>{segment.replace(/([A-Z])/g, ' $1').trim()}</label>\n                                    <div className=\"accuracy-bar\">\n                                        <div\n                                            className=\"accuracy-fill\"\n                                            style={{ width: '100%' }}\n                                        />\n                                    </div>\n                                </div>\n                            ))\n                        )}\n                    </div>\n\n                    {isSessionStarted && gameFeedback && (\n                        <div className=\"feedback-card\">\n                            <h3>Instructor Feedback</h3>\n                            <div className=\"feedback-section\">\n                                {gameFeedback}\n                            </div>\n                        </div>\n                    )}\n                </div>\n            </div>\n\n            {error && (\n                <div className=\"error-message\">\n                    <p>{error}</p>\n                    <button\n                        className=\"retry-button\"\n                        onClick={() => {\n                            setError(null);\n                            window.location.reload();\n                        }}\n                    >\n                        Retry\n                    </button>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default PoseTracker;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}