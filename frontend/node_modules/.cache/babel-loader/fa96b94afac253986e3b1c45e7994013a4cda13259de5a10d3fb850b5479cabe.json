{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Quant\\\\Documents\\\\Programming\\\\Projects\\\\Hackathon\\\\MakeUofT\\\\frontend\\\\src\\\\components\\\\UserProfile.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './UserProfile.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst UserProfile = ({\n  userPreferences\n}) => {\n  _s();\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [editMode, setEditMode] = useState({\n    personal: false,\n    preferences: false\n  });\n  const [personalInfo, setPersonalInfo] = useState({\n    email: '',\n    username: '',\n    currentPassword: '',\n    newPassword: '',\n    confirmPassword: ''\n  });\n  const [preferences, setPreferences] = useState({\n    experienceLevel: '',\n    practiceDuration: '',\n    practiceFrequency: '',\n    focusAreas: []\n  });\n  useEffect(() => {\n    const fetchUserData = async () => {\n      try {\n        const token = localStorage.getItem('userToken');\n        const response = await fetch('/api/users/profile', {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        if (!response.ok) {\n          throw new Error('Failed to fetch user data');\n        }\n        const data = await response.json();\n        setPersonalInfo({\n          email: data.email,\n          username: data.username,\n          currentPassword: '',\n          newPassword: '',\n          confirmPassword: ''\n        });\n        setPreferences(userPreferences || data.preferences);\n        setIsLoading(false);\n      } catch (err) {\n        setError(err.message);\n        setIsLoading(false);\n      }\n    };\n    fetchUserData();\n  }, [userPreferences]);\n  const handlePersonalInfoSubmit = async e => {\n    e.preventDefault();\n    try {\n      const token = localStorage.getItem('userToken');\n      const response = await fetch('/api/users/profile', {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          email: personalInfo.email,\n          username: personalInfo.username,\n          currentPassword: personalInfo.currentPassword,\n          newPassword: personalInfo.newPassword\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to update profile');\n      }\n      setEditMode({\n        ...editMode,\n        personal: false\n      });\n      // Clear password fields\n      setPersonalInfo(prev => ({\n        ...prev,\n        currentPassword: '',\n        newPassword: '',\n        confirmPassword: ''\n      }));\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  const handlePreferencesSubmit = async e => {\n    e.preventDefault();\n    try {\n      const token = localStorage.getItem('userToken');\n      const response = await fetch('/api/users/preferences', {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify(preferences)\n      });\n      if (!response.ok) {\n        throw new Error('Failed to update preferences');\n      }\n      localStorage.setItem('userPreferences', JSON.stringify(preferences));\n      setEditMode({\n        ...editMode,\n        preferences: false\n      });\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-profile\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Profile Settings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Personal Information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"edit-button\",\n          onClick: () => setEditMode({\n            ...editMode,\n            personal: !editMode.personal\n          }),\n          children: editMode.personal ? 'Cancel' : 'Edit'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handlePersonalInfoSubmit,\n        className: \"profile-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            value: personalInfo.email,\n            onChange: e => setPersonalInfo({\n              ...personalInfo,\n              email: e.target.value\n            }),\n            disabled: !editMode.personal\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: personalInfo.username,\n            onChange: e => setPersonalInfo({\n              ...personalInfo,\n              username: e.target.value\n            }),\n            disabled: !editMode.personal\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }, this), editMode.personal && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Current Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              value: personalInfo.currentPassword,\n              onChange: e => setPersonalInfo({\n                ...personalInfo,\n                currentPassword: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"New Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              value: personalInfo.newPassword,\n              onChange: e => setPersonalInfo({\n                ...personalInfo,\n                newPassword: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Confirm New Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              value: personalInfo.confirmPassword,\n              onChange: e => setPersonalInfo({\n                ...personalInfo,\n                confirmPassword: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"save-button\",\n            children: \"Save Changes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Practice Preferences\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"edit-button\",\n          onClick: () => setEditMode({\n            ...editMode,\n            preferences: !editMode.preferences\n          }),\n          children: editMode.preferences ? 'Cancel' : 'Edit'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handlePreferencesSubmit,\n        className: \"profile-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Experience Level\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: preferences.experienceLevel,\n            onChange: e => setPreferences({\n              ...preferences,\n              experienceLevel: e.target.value\n            }),\n            disabled: !editMode.preferences,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"beginner\",\n              children: \"Beginner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"intermediate\",\n              children: \"Intermediate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"advanced\",\n              children: \"Advanced\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Practice Duration (minutes)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: preferences.practiceDuration,\n            onChange: e => setPreferences({\n              ...preferences,\n              practiceDuration: e.target.value\n            }),\n            disabled: !editMode.preferences,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"15\",\n              children: \"15\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"30\",\n              children: \"30\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"45\",\n              children: \"45\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"60\",\n              children: \"60\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Practice Frequency\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: preferences.practiceFrequency,\n            onChange: e => setPreferences({\n              ...preferences,\n              practiceFrequency: e.target.value\n            }),\n            disabled: !editMode.preferences,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"daily\",\n              children: \"Daily\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"weekly\",\n              children: \"2-3 times per week\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"occasional\",\n              children: \"Occasional\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Focus Areas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"checkbox-group\",\n            children: ['Flexibility', 'Strength', 'Balance', 'Mindfulness'].map(area => /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"checkbox-label\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: preferences.focusAreas.includes(area),\n                onChange: e => {\n                  const updatedAreas = e.target.checked ? [...preferences.focusAreas, area] : preferences.focusAreas.filter(a => a !== area);\n                  setPreferences({\n                    ...preferences,\n                    focusAreas: updatedAreas\n                  });\n                },\n                disabled: !editMode.preferences\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 37\n              }, this), area]\n            }, area, true, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 21\n        }, this), editMode.preferences && /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"save-button\",\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 9\n  }, this);\n};\n_s(UserProfile, \"gPYEHBfy1r9Z4JxDIZgT6Kcu/U8=\");\n_c = UserProfile;\nexport default UserProfile;\nvar _c;\n$RefreshReg$(_c, \"UserProfile\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","UserProfile","userPreferences","_s","isLoading","setIsLoading","error","setError","editMode","setEditMode","personal","preferences","personalInfo","setPersonalInfo","email","username","currentPassword","newPassword","confirmPassword","setPreferences","experienceLevel","practiceDuration","practiceFrequency","focusAreas","fetchUserData","token","localStorage","getItem","response","fetch","headers","ok","Error","data","json","err","message","handlePersonalInfoSubmit","e","preventDefault","method","body","JSON","stringify","prev","handlePreferencesSubmit","setItem","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","type","value","onChange","target","disabled","map","area","checked","includes","updatedAreas","filter","a","_c","$RefreshReg$"],"sources":["C:/Users/Quant/Documents/Programming/Projects/Hackathon/MakeUofT/frontend/src/components/UserProfile.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './UserProfile.css';\r\n\r\nconst UserProfile = ({ userPreferences }) => {\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const [editMode, setEditMode] = useState({\r\n        personal: false,\r\n        preferences: false\r\n    });\r\n\r\n    const [personalInfo, setPersonalInfo] = useState({\r\n        email: '',\r\n        username: '',\r\n        currentPassword: '',\r\n        newPassword: '',\r\n        confirmPassword: ''\r\n    });\r\n\r\n    const [preferences, setPreferences] = useState({\r\n        experienceLevel: '',\r\n        practiceDuration: '',\r\n        practiceFrequency: '',\r\n        focusAreas: []\r\n    });\r\n\r\n    useEffect(() => {\r\n        const fetchUserData = async () => {\r\n            try {\r\n                const token = localStorage.getItem('userToken');\r\n                const response = await fetch('/api/users/profile', {\r\n                    headers: {\r\n                        'Authorization': `Bearer ${token}`\r\n                    }\r\n                });\r\n\r\n                if (!response.ok) {\r\n                    throw new Error('Failed to fetch user data');\r\n                }\r\n\r\n                const data = await response.json();\r\n                setPersonalInfo({\r\n                    email: data.email,\r\n                    username: data.username,\r\n                    currentPassword: '',\r\n                    newPassword: '',\r\n                    confirmPassword: ''\r\n                });\r\n                setPreferences(userPreferences || data.preferences);\r\n                setIsLoading(false);\r\n            } catch (err) {\r\n                setError(err.message);\r\n                setIsLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchUserData();\r\n    }, [userPreferences]);\r\n\r\n    const handlePersonalInfoSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const token = localStorage.getItem('userToken');\r\n            const response = await fetch('/api/users/profile', {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer ${token}`\r\n                },\r\n                body: JSON.stringify({\r\n                    email: personalInfo.email,\r\n                    username: personalInfo.username,\r\n                    currentPassword: personalInfo.currentPassword,\r\n                    newPassword: personalInfo.newPassword\r\n                })\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Failed to update profile');\r\n            }\r\n\r\n            setEditMode({ ...editMode, personal: false });\r\n            // Clear password fields\r\n            setPersonalInfo(prev => ({\r\n                ...prev,\r\n                currentPassword: '',\r\n                newPassword: '',\r\n                confirmPassword: ''\r\n            }));\r\n        } catch (err) {\r\n            setError(err.message);\r\n        }\r\n    };\r\n\r\n    const handlePreferencesSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const token = localStorage.getItem('userToken');\r\n            const response = await fetch('/api/users/preferences', {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer ${token}`\r\n                },\r\n                body: JSON.stringify(preferences)\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Failed to update preferences');\r\n            }\r\n\r\n            localStorage.setItem('userPreferences', JSON.stringify(preferences));\r\n            setEditMode({ ...editMode, preferences: false });\r\n        } catch (err) {\r\n            setError(err.message);\r\n        }\r\n    };\r\n\r\n    if (isLoading) {\r\n        return <div className=\"loading\">Loading...</div>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"user-profile\">\r\n            <div className=\"profile-header\">\r\n                <h1>Profile Settings</h1>\r\n            </div>\r\n\r\n            {error && <div className=\"error-message\">{error}</div>}\r\n\r\n            <div className=\"profile-section\">\r\n                <div className=\"section-header\">\r\n                    <h2>Personal Information</h2>\r\n                    <button\r\n                        className=\"edit-button\"\r\n                        onClick={() => setEditMode({ ...editMode, personal: !editMode.personal })}\r\n                    >\r\n                        {editMode.personal ? 'Cancel' : 'Edit'}\r\n                    </button>\r\n                </div>\r\n\r\n                <form onSubmit={handlePersonalInfoSubmit} className=\"profile-form\">\r\n                    <div className=\"form-group\">\r\n                        <label>Email</label>\r\n                        <input\r\n                            type=\"email\"\r\n                            value={personalInfo.email}\r\n                            onChange={(e) => setPersonalInfo({ ...personalInfo, email: e.target.value })}\r\n                            disabled={!editMode.personal}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Username</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            value={personalInfo.username}\r\n                            onChange={(e) => setPersonalInfo({ ...personalInfo, username: e.target.value })}\r\n                            disabled={!editMode.personal}\r\n                        />\r\n                    </div>\r\n                    {editMode.personal && (\r\n                        <>\r\n                            <div className=\"form-group\">\r\n                                <label>Current Password</label>\r\n                                <input\r\n                                    type=\"password\"\r\n                                    value={personalInfo.currentPassword}\r\n                                    onChange={(e) => setPersonalInfo({ ...personalInfo, currentPassword: e.target.value })}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>New Password</label>\r\n                                <input\r\n                                    type=\"password\"\r\n                                    value={personalInfo.newPassword}\r\n                                    onChange={(e) => setPersonalInfo({ ...personalInfo, newPassword: e.target.value })}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Confirm New Password</label>\r\n                                <input\r\n                                    type=\"password\"\r\n                                    value={personalInfo.confirmPassword}\r\n                                    onChange={(e) => setPersonalInfo({ ...personalInfo, confirmPassword: e.target.value })}\r\n                                />\r\n                            </div>\r\n                            <button type=\"submit\" className=\"save-button\">Save Changes</button>\r\n                        </>\r\n                    )}\r\n                </form>\r\n            </div>\r\n\r\n            <div className=\"profile-section\">\r\n                <div className=\"section-header\">\r\n                    <h2>Practice Preferences</h2>\r\n                    <button\r\n                        className=\"edit-button\"\r\n                        onClick={() => setEditMode({ ...editMode, preferences: !editMode.preferences })}\r\n                    >\r\n                        {editMode.preferences ? 'Cancel' : 'Edit'}\r\n                    </button>\r\n                </div>\r\n\r\n                <form onSubmit={handlePreferencesSubmit} className=\"profile-form\">\r\n                    <div className=\"form-group\">\r\n                        <label>Experience Level</label>\r\n                        <select\r\n                            value={preferences.experienceLevel}\r\n                            onChange={(e) => setPreferences({ ...preferences, experienceLevel: e.target.value })}\r\n                            disabled={!editMode.preferences}\r\n                        >\r\n                            <option value=\"beginner\">Beginner</option>\r\n                            <option value=\"intermediate\">Intermediate</option>\r\n                            <option value=\"advanced\">Advanced</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Practice Duration (minutes)</label>\r\n                        <select\r\n                            value={preferences.practiceDuration}\r\n                            onChange={(e) => setPreferences({ ...preferences, practiceDuration: e.target.value })}\r\n                            disabled={!editMode.preferences}\r\n                        >\r\n                            <option value=\"15\">15</option>\r\n                            <option value=\"30\">30</option>\r\n                            <option value=\"45\">45</option>\r\n                            <option value=\"60\">60</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Practice Frequency</label>\r\n                        <select\r\n                            value={preferences.practiceFrequency}\r\n                            onChange={(e) => setPreferences({ ...preferences, practiceFrequency: e.target.value })}\r\n                            disabled={!editMode.preferences}\r\n                        >\r\n                            <option value=\"daily\">Daily</option>\r\n                            <option value=\"weekly\">2-3 times per week</option>\r\n                            <option value=\"occasional\">Occasional</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Focus Areas</label>\r\n                        <div className=\"checkbox-group\">\r\n                            {['Flexibility', 'Strength', 'Balance', 'Mindfulness'].map(area => (\r\n                                <label key={area} className=\"checkbox-label\">\r\n                                    <input\r\n                                        type=\"checkbox\"\r\n                                        checked={preferences.focusAreas.includes(area)}\r\n                                        onChange={(e) => {\r\n                                            const updatedAreas = e.target.checked\r\n                                                ? [...preferences.focusAreas, area]\r\n                                                : preferences.focusAreas.filter(a => a !== area);\r\n                                            setPreferences({ ...preferences, focusAreas: updatedAreas });\r\n                                        }}\r\n                                        disabled={!editMode.preferences}\r\n                                    />\r\n                                    {area}\r\n                                </label>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                    {editMode.preferences && (\r\n                        <button type=\"submit\" className=\"save-button\">Save Changes</button>\r\n                    )}\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserProfile; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}